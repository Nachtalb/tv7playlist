name: Docker Build and Push

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create and push architecture-specific tags
        if: github.event_name != 'pull_request'
        run: |
          REPO_LOWER=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)

          for arch in amd64 arm32v7 arm64v8; do
            case $arch in
              amd64)   platform="linux/amd64" ;;
              arm32v7) platform="linux/arm/v7" ;;
              arm64v8) platform="linux/arm64/v8" ;;
            esac

            docker buildx build --platform $platform \
              -t ${{ env.REGISTRY }}/${REPO_LOWER}:latest-${arch} \
              -t ${{ env.REGISTRY }}/${REPO_LOWER}:${SHORT_SHA}-${arch} \
              --push \
              .
          done
